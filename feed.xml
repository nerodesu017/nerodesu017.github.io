<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-05-07T17:24:05+03:00</updated><id>/feed.xml</id><title type="html">NeroAdventures</title><subtitle>The Adventures of a Rustacean named Nero</subtitle><author><name>Nero</name><email>nerodesu017@gmail.com</email></author><entry><title type="html">ANTIBOTS - PART III - Taking a look at the first part of the Incapsula antibot</title><link href="/antibots/programming/2021/05/07/antibots-part-3.html" rel="alternate" type="text/html" title="ANTIBOTS - PART III - Taking a look at the first part of the Incapsula antibot" /><published>2021-05-07T15:25:00+03:00</published><updated>2021-05-07T15:25:00+03:00</updated><id>/antibots/programming/2021/05/07/antibots-part-3</id><content type="html" xml:base="/antibots/programming/2021/05/07/antibots-part-3.html">&lt;blockquote&gt;
  &lt;h1 id=&quot;foreword&quot;&gt;Foreword:&lt;/h1&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;h2 id=&quot;make-sure-you-have-nodejs-installed-a-text-editor-or-ide-in-my-case-i-use-vscode-and-most-preferably-chrome-as-a-browser-or-any-other-chromium-based-browser-but-firefox-would-suffice-as-well&quot;&gt;Make sure you have &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJS&lt;/a&gt; installed, a text editor or IDE (in my case I use &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt;) and most preferably &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt; as a browser (or any other Chromium based browser), but &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt; would suffice as well&lt;/h2&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;h2 id=&quot;from-now-on-the-whole-project-will-be-hosted-at-antibot-incapsula&quot;&gt;From now on, the whole project will be hosted at &lt;a href=&quot;https://github.com/nerodesu017/antibot-incapsula&quot;&gt;antibot-incapsula&lt;/a&gt;&lt;/h2&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;h2 id=&quot;tools-used&quot;&gt;Tools used:&lt;/h2&gt;
      &lt;ul&gt;
        &lt;li&gt;
          &lt;h3 id=&quot;astexplorer&quot;&gt;&lt;a href=&quot;https://astexplorer.net/&quot;&gt;ASTExplorer&lt;/a&gt;&lt;/h3&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;h3 id=&quot;google&quot;&gt;&lt;a href=&quot;https://google.com&quot;&gt;Google&lt;/a&gt;&lt;/h3&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;h2 id=&quot;incapsula-is-obfuscated-using-obfuscatorio-while-learning-i-havent-used-this-and-tried-to-do-it-all-by-myself-which-in-my-opinion-was-fun-and-made-me-use-my-brain-more-though-i-strongly-encourage-its-use-in-case-you-get-stuck-and-need-help-or-just-want-to-see-more-obfuscations-that-it-can-do---obfuscatorio-on-github&quot;&gt;Incapsula is obfuscated using &lt;a href=&quot;https://obfuscator.io/&quot;&gt;Obfuscator.io&lt;/a&gt;, while learning I haven’t used this and tried to do it all by myself which in my opinion was fun and made me use my brain more, though I strongly encourage its use in case you get stuck and need help or just want to see more obfuscations that it can do -&amp;gt; &lt;a href=&quot;https://github.com/javascript-obfuscator/javascript-obfuscator&quot;&gt;Obfuscator.io on Github&lt;/a&gt;&lt;/h2&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;ive-dug-a-little-bit-the-web-and-found-a-website-that-uses-incapsula-will-put-the-script-i-got-up-on-github-since-it-changes-values-every-time-and-they-have-checks-in-their-backend-the-script-i-provide-will-suffice-for-our-case&quot;&gt;I’ve dug a little bit the web and found a website that uses Incapsula (will put the script I got up on github, since it changes values every time and they have checks in their backend, the script I provide will suffice for our case)&lt;/h3&gt;
&lt;h3 id=&quot;the-script-looks-something-like-this&quot;&gt;The script looks something like this:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;766172205[...LONG BORING STRING...]7d7d2829293b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;lets-plug-this-big-blob-in-astexplorer-and-see-what-kind-of-nodes-is-the-our-program-composed-of&quot;&gt;Let’s plug this big blob in &lt;a href=&quot;https://astexplorer.net/&quot;&gt;ASTExplorer&lt;/a&gt; and see what kind of nodes is the our Program composed of!&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/ANTIBOTS-PART-III-IMG-1.png&quot; alt=&quot;img1&quot; title=&quot;-&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;plugging-the-script-in-astexplorer-tells-us-theres-a-single-node-so-if-youve-spent-a-bit-of-time-in-the-coding-world-youll-realize-that-this-node-is-an-iife-immediately-invoked-function-expression-it-is-a-function-that-has-no-name-just-like-a-lambda-and-gets-executed-the-moment-the-interpreter-gets-to-it&quot;&gt;Plugging the script in &lt;a href=&quot;https://astexplorer.net/&quot;&gt;ASTExplorer&lt;/a&gt; tells us there’s a single node! So, if you’ve spent a bit of time in the coding world you’ll realize that this node is an IIFE (Immediately Invoked Function Expression), it is a function that has no name (just like a lambda) and gets executed the moment the interpreter gets to it.&lt;/h3&gt;

&lt;h3 id=&quot;getting-back-to-the-script-and-looking-at-the-instructions-following-the-definition-of-the-boring-long-script-we-see-theres-an-eval-that-evaluates-the-string-that-gets-put-into-the-z-variable&quot;&gt;Getting back to the script, and looking at the instructions following the definition of the boring long script, we see there’s an eval that evaluates the string that gets put into the ‘z’ variable&lt;/h3&gt;

&lt;h3 id=&quot;so-the-function-thats-passed-as-an-argument-to-the-eval-is-kind-of-like-a-decoding-function-transforms-the-b-string-into-actual-code-that-gets-put-into-the-z-variable-which-then-gets-executed-the-eval-function-only-executes-the-returnor-the-last-value-of-the-argument-it-gets-passed&quot;&gt;So the function that’s passed as an argument to the eval is kind of like a decoding function, transforms the b string into actual code that gets put into the z variable, which then gets executed (the eval function only executes the return/or the last value of the argument it gets passed)&lt;/h3&gt;

&lt;h3 id=&quot;what-we-can-do-is-instead-of-returning-z-we-can-modify-that-line-to-log-the-script-to-the-console-so-it-ends-up-being-like-this&quot;&gt;What we can do is, instead of returning z, we can modify that line to log the script to the console, so it ends up being like this:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;766172205[...LONG BORING STRING...]7d7d2829293b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;since-there-are-no-checks-inside-the-first-script-you-can-just-execute-the-script-and-pipe-the-output-into-a-file-like-this&quot;&gt;Since there are no checks inside the first script, you can just execute the script and pipe the output into a file like this:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;node incapsula.js &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; incapsula_unpacked.js&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Nero</name></author><category term="antibots" /><category term="programming" /><category term="antibot" /><category term="antibots" /><category term="programming" /><category term="ast" /><category term="manipulation" /><summary type="html">Foreword: Make sure you have NodeJS installed, a text editor or IDE (in my case I use VSCode) and most preferably Chrome as a browser (or any other Chromium based browser), but Firefox would suffice as well From now on, the whole project will be hosted at antibot-incapsula Tools used: ASTExplorer Google Incapsula is obfuscated using Obfuscator.io, while learning I haven’t used this and tried to do it all by myself which in my opinion was fun and made me use my brain more, though I strongly encourage its use in case you get stuck and need help or just want to see more obfuscations that it can do -&amp;gt; Obfuscator.io on Github</summary></entry><entry><title type="html">ANTIBOTS - PART II - What is AST Manipulation, What is Regex, Why Would I Prefer One Over The Other?</title><link href="/antibots/programming/2021/05/06/antibots-part-2.html" rel="alternate" type="text/html" title="ANTIBOTS - PART II - What is AST Manipulation, What is Regex, Why Would I Prefer One Over The Other?" /><published>2021-05-06T22:25:00+03:00</published><updated>2021-05-06T22:25:00+03:00</updated><id>/antibots/programming/2021/05/06/antibots-part-2</id><content type="html" xml:base="/antibots/programming/2021/05/06/antibots-part-2.html">&lt;h3 id=&quot;we-got-to-the-point-ive-been-waiting-for-ast-manipulation-and-regex&quot;&gt;We got to the point I’ve been waiting for: AST Manipulation and Regex.&lt;/h3&gt;

&lt;h3 id=&quot;first-what-is-regex-regex-is-short-for-regular-expression-which-basically-specifies-a-pattern-antibots-are-javascript-and-javascript-is-just-code-code-is-made-up-of-characters-so-the-whole-script-you-could-say-is-a-loooooooooong-string-regex-works-on-just-that-strings-you-can-match-anything-youd-like-aaaaaaand-anything-you-dont-like-heres-an-example-what-im-talking-about&quot;&gt;First, what is regex? Regex is short for “regular expression” which basically specifies a pattern. Antibots are javascript, and javascript is just code. Code is made up of characters, so the whole script you could say is a loooooooooong string. Regex works on just that… Strings! You can match anything you’d like… aaaaaaand anything you don’t like, here’s an example what I’m talking about:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;secret_key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;heres-in-code-what-a-function-in-javascript-looks-like-lets-say-our-function-solution-was-always-just-like-that-in-code-and-we-could-find-the-code-we-could-create-a-regular-expression-or-actually-2-to-find-the-key-great-news&quot;&gt;Here’s, in code, what a function in javascript looks like. Let’s say our function solution was always just like that in code and we could find the code. We could create a regular expression (or actually 2) to find the key, great news!&lt;/h3&gt;

&lt;h3 id=&quot;lets-see-what-these-would-look-like&quot;&gt;Let’s see what these would look like:&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/ANTIBOTS-PART-II-IMG-1.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;making-use-of-httpsregex101com-we-found-a-regex-that-would-suffice-what-we-search-for-at-least-the-first-part&quot;&gt;Making use of https://regex101.com we found a Regex that would suffice what we search for (at least the first part):&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{((.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/gm&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;our-first-matching-group-would-be-this-one&quot;&gt;Our first matching group would be this one:&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;secret_key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;now-we-can-do-the-same-for-this-string-as-well-and-get-our-secret-key-you-see-where-this-is-going&quot;&gt;Now we can do the same for this string as well and get our secret key, you see where this is going..&lt;/h3&gt;

&lt;h3 id=&quot;lets-see-how-someone-that-creates-these-antibots-would-trick-our-code-pretty-easily&quot;&gt;Let’s see how someone that creates these antibots would trick our code pretty easily!&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*
  function solution(){
    let key = 'fake_key';
    return key;
  }
*/&lt;/span&gt;
  
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;secret_key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;just-like-that-our-first-regex-would-have-2-matches-this-time-and-the-way-we-built-it-was-to-get-the-first-match-so-wed-end-up-with-the-fake-key-instead-of-the-real-one&quot;&gt;Just like that, our first regex would have 2 matches this time, and the way we built it was to get the first match, so we’d end up with the fake key instead of the real one!&lt;/h3&gt;
&lt;h3 id=&quot;yes-sure-someone-could-come-up-and-say-how-we-could-edit-our-regex-and-make-it-even-more-complex-to-find-the-right-key-by-detecting-if-it-is-a-comment-thats-not-the-point&quot;&gt;Yes, sure someone could come up and say how we could edit our regex and make it even more complex to find the right key by detecting if it is a comment. That’s not the point.&lt;/h3&gt;
&lt;h3 id=&quot;the-point-is-regexes-become-really-long-and-hard-and-hard-to-maintain-and-scale-and-ugly-its-just-not-the-right-approach-for-if-the-antibot-changes-much-even-tho-its-pretty-fast-i-gotta-admit-much-faster-than-what-im-about-to-show-you&quot;&gt;The point is, regexes become really long and hard, and hard to maintain, and scale, and ugly. It’s just not the right approach for if the antibot changes much. (even tho it’s pretty fast I gotta admit, much faster than what I’m about to show you)&lt;/h3&gt;

&lt;h3 id=&quot;thats-where-ast-comes-into-play&quot;&gt;That’s where AST comes into play!&lt;/h3&gt;
&lt;h3 id=&quot;ast-is-the-short-form-of-abstract-syntax-tree-javascript-is-basically-a-programming-language-it-has-to-be-interpreted-by-the-interpreter-the-v8-engine-also-compiles-the-javascript-to-machine-code-but-again-im-deviating-too-much&quot;&gt;AST is the short form of Abstract Syntax Tree. Javascript is basically a programming language, it has to be interpreted by the interpreter (The V8 engine also compiles the javascript to machine code, but again, I’m deviating too much)&lt;/h3&gt;
&lt;h3 id=&quot;when-it-gets-interpreted-the-interpreter-also-has-a-parser-that-transforms-all-that-javascript-into-an-ast-so-what-we-are-going-to-do-is-tokenize-our-script-and-transform-it-from-there&quot;&gt;When it gets interpreted, the interpreter also has a parser that transforms all that javascript into an AST, so what we are going to do is “tokenize” our script and transform it from there.&lt;/h3&gt;
&lt;h3 id=&quot;to-understand-tokenization-better-lets-take-a-look-at-english-when-we-speak-we-combine-words-together-into-sentences-words-can-be-of-different-types-noun-adjective-adverb-so-we-can-tokenize-each-word-and-specify-what-type-it-is-theres-more-to-english-you-can-break-down-sentences-into-clauses-and-have-a-main-and-a-secondary-clause-its-a-whole-process&quot;&gt;To understand tokenization better let’s take a look at english. When we speak we combine WORDS together into SENTENCES. Words can be of different types NOUN, ADJECTIVE, ADVERB. So we can tokenize each word and specify what type it is. There’s more to english, you can break down sentences into clauses and have a main and a secondary clause, it’s a whole process!&lt;/h3&gt;
&lt;h3 id=&quot;javascript-is-just-the-same-lets-take-for-example-a-variable-declaration-ill-be-using-httpsastexplorernet-for-seeing-the-nodes-inside-the-ast-i-shall-recommend-you-use-it-too-since-its-quite-a-powerful-tool-ill-also-be-using-the-babel-suite-for-parsing-the-script-into-ast-traversing-the-ast-and-generating-the-final-script-back-from-ast&quot;&gt;Javascript is just the same, let’s take for example a variable declaration (I’ll be using https://astexplorer.net for seeing the nodes inside the AST, I shall recommend you use it, too, since it’s quite a powerful tool! I’ll also be using the BABEL suite for parsing the script into AST, traversing the AST and generating the final script back from AST):&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/ANTIBOTS-PART-II-IMG-2.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;everything-starts-with-the-file-object-inside-this-object-we-got-the-body-array-which-is-an-array-that-is-composed-of-all-the-nodes-inside-the-script-at-the-moment-we-only-have-1-node-and-thats-the-variable-declaration-in-the-left-side&quot;&gt;Everything starts with the File object. Inside this object we got the Body array, which is an array that is composed of all the nodes inside the script. At the moment we only have 1 node and that’s the variable declaration in the left side!&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/ANTIBOTS-PART-II-IMG-3.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;opening-up-the-body-array-and-expanding-the-first-node-we-can-see-it-is-of-type-variabledeclaration-and-contains-an-array-of-declarations-composed-of-only-1-declaration-a-variable-declaration-lets-open-that-up-and-see-what-well-learn-about-it&quot;&gt;Opening up the body array and expanding the first node we can see it is of type “VariableDeclaration” and contains an array of declarations composed of only 1 declaration, a variable declaration! Let’s open that up and see what we’ll learn about it…&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/ANTIBOTS-PART-II-IMG-4.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;as-we-can-see-the-variabledeclarator-node-is-composed-of-2-other-nodes-its-id-the-variables-name-and-the-value-it-holds&quot;&gt;As we can see, the VariableDeclarator node is composed of 2 other nodes: its id (the variable’s name) and the value it holds.&lt;/h3&gt;
&lt;h3 id=&quot;we-can-also-see-that-the-variable-name-is-a-node-of-type-identifier-while-the-value-it-holds-is-a-string-literal-peep-that-its-inside-quotes&quot;&gt;We can also see that the variable name is a node of type Identifier while the value it holds is a string literal (Peep that it’s inside quotes)&lt;/h3&gt;
&lt;h3 id=&quot;a-list-of-all-the-types-can-be-found-at-httpsbabeljsiodocsenbabel-types-which-will-help-us-when-doing-transformations-because-well-have-to-create-nodes-to-replace-other-nodes&quot;&gt;A list of all the types can be found at: https://babeljs.io/docs/en/babel-types which will help us when doing transformations because we’ll have to create nodes to replace other nodes!&lt;/h3&gt;
&lt;h3 id=&quot;so-the-basics-of-it-is-that-that-is-what-ast-is-all-about-tokenization-based-on-that-well-be-able-to-traverse-the-ast-find-specific-nodes-by-their-types-and-also-filter-them-by-the-type-of-nodes-they-contain-and-what-not-endless-possibilities-and-youll-see-it-will-actually-be-much-easier-to-comprehend-than-regex-though-this-will-come-at-the-cost-of-time-parsing-and-traversing-is-pretty-costly&quot;&gt;So the basics of it is that, that is what AST is all about, tokenization, based on that, we’ll be able to traverse the AST, find specific nodes by their types and also filter them by the type of nodes they contain and what not, endless possibilities! And you’ll see it will actually be much easier to comprehend than regex, though this will come at the cost of time (parsing and traversing is pretty costly).&lt;/h3&gt;</content><author><name>Nero</name></author><category term="antibots" /><category term="programming" /><category term="antibot" /><category term="antibots" /><category term="programming" /><category term="ast" /><category term="manipulation" /><summary type="html">We got to the point I’ve been waiting for: AST Manipulation and Regex.</summary></entry><entry><title type="html">ANTIBOTS - PART I - A short introduction to the Sneaker Development Industry and Antibots</title><link href="/antibots/programming/2021/05/06/antibots-part-1.html" rel="alternate" type="text/html" title="ANTIBOTS - PART I - A short introduction to the Sneaker Development Industry and Antibots" /><published>2021-05-06T03:45:10+03:00</published><updated>2021-05-06T03:45:10+03:00</updated><id>/antibots/programming/2021/05/06/antibots-part-1</id><content type="html" xml:base="/antibots/programming/2021/05/06/antibots-part-1.html">&lt;h3 id=&quot;lets-imagine-for-a-second-you-want-to-bot-a-website-though-why-would-you-wanna-do-this-well-nowadays-there-are-quite-a-few-products-that-are-produced-in-low-quantity-and-the-demand-is-pretty-high-for-example-gpus-or-even-sneakers&quot;&gt;Let’s imagine for a second you want to bot a website. Though, why would you wanna do this? Well, nowadays, there are quite a few products that are produced in low quantity and the demand is pretty high. For example, GPUs or even sneakers.&lt;/h3&gt;

&lt;h3 id=&quot;you-spend-a-few-weeksmonths-researching-and-you-tell-yourself-youre-gonna-start-a-bot-of-your-own-as-a-personal-bot-or-even-to-give-it-out-to-people-as-well-all-goes-well-you-learn-http-about-requests-learn-how-to-use-chrome-dev-tools-and-everything-looks-perfect-theres-a-catch-though-these-websites-well-they-are-sought-by-a-lot-of-people-its-about-who-gets-there-first-and-checkouts-so-you-gotta-be-quick&quot;&gt;You spend a few weeks/months researching and you tell yourself you’re gonna start a bot of your own, as a personal bot or even to give it out to people as well. All goes well, you learn http, about requests, learn how to use Chrome Dev Tools and everything looks perfect! There’s a catch though, these websites, well, they are sought by a lot of people, it’s about who gets there first and checkouts, so you gotta be quick.&lt;/h3&gt;

&lt;h3 id=&quot;at-first-you-thought-a-browser-bot-would-be-enough-because-you-would-have-to-just-mimic-the-users-actions-theres-when-antibots-come-in-they-detect-those-browsers-so-you-dig-a-little-on-the-internet-and-you-find-that-there-are-packages-that-make-your-browser-undetected-success&quot;&gt;At first, you thought a browser bot would be enough, because you would have to just mimic the user’s actions.. There’s when antibots come in, they detect those browsers.. So you dig a little on the internet and you find that there are packages that make your browser undetected, success!!!&lt;/h3&gt;

&lt;h3 id=&quot;the-development-goes-all-well-and-then-you-find-yourself-still-not-being-able-to-checkout-cause-theres-not-only-you-that-thought-to-bot-this-way-so-what-would-be-faster&quot;&gt;The development goes all well, and then you find yourself still not being able to checkout, cause there’s not only you that thought to bot this way, so what would be faster?&lt;/h3&gt;

&lt;h3 id=&quot;going-request-mode-of-course-but-when-you-go-request-mode-theres-no-way-of-actually-going-about-the-antibot&quot;&gt;Going request mode, of course! But when you go request mode, there’s no way of actually going about the antibot.&lt;/h3&gt;

&lt;h2 id=&quot;these-antibots-are-especially-made-to-be-run-in-a-browser&quot;&gt;These antibots are especially made to be run in a browser.&lt;/h2&gt;

&lt;h3 id=&quot;first-we-have-to-understand-what-these-antibots-are-and-at-a-basic-level-how-they-work&quot;&gt;First, we have to understand what these antibots are and, at a basic level, how they work.&lt;/h3&gt;

&lt;h3 id=&quot;theres-quite-a-few-different-ways-antibots-can-detect-that-you-are-indeed-sending-illegitimate-requests-to-the-webserver-from-what-ive-seen-a-few-of-the-methods-are&quot;&gt;There’s quite a few different ways antibots can detect that you are indeed sending illegitimate requests to the webserver, from what I’ve seen a few of the methods are:&lt;/h3&gt;

&lt;h4 id=&quot;detecting-and-blocking-the-ip-you-are-sending-requests-from---when-you-want-to-bot-a-website-you-usually-want-to-get-as-much-quantity-of-a-product-as-you-can-there-are-people-who-have-the-funds-for-even-100-gpus-this-comes-with-a-bit-of-headache-at-first-wouldnt-you-get-blocked-by-the-website-if-you-sent-100-requests-from-your-pc-at-the-same-time-but-bingo-theres-a-solution-proxies-you-can-first-reroute-your-traffic-through-another-machine-so-that-the-website-thinks-you-are-sending-your-requests-from-another-location-these-antibots-that-im-talking-about-for-the-moment-datadome-gather-data-of-datacenters-and-botnets-that-exist-and-block-their-ips-these-seem-to-be-the-ones-we-cant-really-tackle-with-ast-manipulation-as-the-decisive-factor-if-the-user-cooks-or-not-its-the-user-himself-or-the-botnetdatacenter-proxies-the-user-uses&quot;&gt;Detecting and blocking the IP you are sending requests from - when you want to bot a website, you usually want to get as much quantity of a product as you can (there are people who have the funds for even 100 GPU’s). This comes with a bit of headache at first, wouldn’t you get blocked by the website if you sent 100 requests from your PC at the same time? But, bingo! There’s a solution, proxies! You can first reroute your traffic through another machine so that the website thinks you are sending your requests from another location! These antibots that I’m talking about (for the moment DataDome) gather data of datacenters and botnets that exist and block their ip’s, these seem to be the ones we can’t really tackle with AST manipulation as the decisive factor if the user cooks or not it’s the user himself or the botnet/datacenter proxies the user uses!&lt;/h4&gt;

&lt;h3 id=&quot;making-use-of-what-the-browser-has-to-offer-to-either-gather-data-and-send-it-to-an-endpoint-for-a-valid-cookie-or-just-generating-the-cookie-on-the-client-itself-what-the-browser-has-to-offer-is-related-to-its-ability-to-manipulate-the-dom-and-to-use-the-specific-browser-variables-window-document-navigator&quot;&gt;Making use of what the browser has to offer to either gather data and send it to an endpoint for a valid cookie, or just generating the cookie on the client itself! What the browser has to offer is related to its ability to manipulate the DOM and to use the specific browser variables (window, document, navigator)&lt;/h3&gt;

&lt;h2 id=&quot;we-are-going-to-focus-the-most-on-the-2nd-type-of-antibots&quot;&gt;We are going to focus the most on the 2nd type of antibots.&lt;/h2&gt;

&lt;h3 id=&quot;lets-expand-a-little-more-how-do-these-antibots-work-exactly-well-they-execute-a-series-of-instructions-checking-to-be-sure-there-exist-the-usual-browser-variables-and-even-use-the-browser-methods-to-manipulate-the-dom-to-make-sure-that-the-antibot-is-not-being-sandboxed&quot;&gt;Let’s expand a little more. How do these antibots work exactly? Well, they execute a series of instructions checking to be sure there exist the usual browser variables and even use the browser methods to manipulate the DOM to make sure that the antibot is not being sandboxed.&lt;/h3&gt;

&lt;h3 id=&quot;what-do-i-mean-by-sandboxing-well-now-i-have-to-deviate-again-but-its-for-a-good-cause-trust-me-lets-look-at-chrome-these-antibots-are-written-in-javascript-which-basically-powers-web-and-clientside-along-with-webassembly-but-kinda-no-antibot-uses-wa-at-the-moment-only-the-antibot-for-httpssupremenewyorkcom-called-ticket-tried-to-make-use-of-it-in-2020-and-it-was-a-disaster-needless-to-say-but-thats-for-another-time-chrome-uses-the-v8-engine-to-execute-javascript-more-about-it-here-httpsv8dev-sandboxing-means-to-try-and-execute-the-script-but-not-in-the-browser-specifically-the-browser-has-to-render-elements-on-the-screen-has-to-load-plugins-it-has-to-do-a-lot-of-things-that-eat-up-resources-up-until-a-decade-ago-2009-javascript-was-only-running-in-the-browser-until-someone-came-up-with-an-idea-to-make-use-of-the-v8-engine-to-make-it-run-javascript-outside-the-browser-and-thats-when-nodejs-was-created-nodejs-uses-only-the-v8-engine-and-doesnt-have-the-browser-variables-window-document-navigator-but-instead-has-some-other-variables-and-it-can-be-detected-pretty-easy-so-thats-why-we-have-to-be-careful&quot;&gt;What do I mean by sandboxing? Well (now I have to deviate again, but it’s for a good cause, trust me), let’s look at chrome. These antibots are written in javascript, which basically powers web and clientside (along with WebAssembly but kinda no antibot uses WA at the moment, only the antibot for https://supremenewyork.com called Ticket tried to make use of it in 2020 and it was a disaster needless to say, but that’s for another time). Chrome uses the V8 engine to execute javascript (more about it here: https://v8.dev). Sandboxing, means to try and execute the script, but not in the browser specifically. The browser has to render elements on the screen, has to load plugins, it has to do a lot of things that eat up resources. Up until a decade ago (2009) javascript was only running in the browser, until someone came up with an idea to make use of the V8 engine to make it run javascript outside the browser! And that’s when NodeJS was created. NodeJS uses only the V8 engine and doesn’t have the browser variables (window, document, navigator) but instead has some other variables and it can be detected pretty easy, so that’s why we have to be careful.&lt;/h3&gt;

&lt;h2 id=&quot;so-what-chance-do-we-have-at-this&quot;&gt;So what chance do we have at this?&lt;/h2&gt;

&lt;h3 id=&quot;by-now-youd-think-our-chances-are-pretty-slim-but-not-really-theres-ways-one-of-them-would-be-to-make-browser-bots-even-more-hidden-by-playing-with-the-variables-they-modify-and-trying-to-simulate-user-actions-better&quot;&gt;By now, you’d think our chances are pretty slim, but not really! There’s ways, one of them would be to make Browser Bots even more hidden by playing with the variables they modify and trying to simulate user actions better.&lt;/h3&gt;

&lt;h3 id=&quot;though-what-well-focus-on-is-trying-to-deobfuscate-these-antibots-see-how-they-work-and-make-working-gens-for-them&quot;&gt;Though, what we’ll focus on is trying to deobfuscate these antibots, see how they work and make working gens for them.&lt;/h3&gt;

&lt;h3 id=&quot;what-do-i-mean-by-deobfuscation-well-software-is-still-property-intellectual-property-in-the-beginning-of-the-information-era-obfuscation-was-used-to-make-sure-competitors-and-other-people-couldnt-just-steal-the-software-they-buy-repack-it-and-resell-it-there-are-also-laws-but-obfuscation-is-also-to-make-it-harder-to-even-replicate-because-it-does-some-transformations-that-dont-affect-the-computer-since-the-computer-executes-the-same-instructions-that-lead-to-the-same-result-but-its-certainly-harder-for-a-human-being-to-understand-the-underlying-way-the-program-executes&quot;&gt;What do I mean by deobfuscation? Well, software is still property, intellectual property. In the beginning of the information era obfuscation was used to make sure competitors and other people couldn’t just steal the software they buy, repack it and resell it (there are also laws, but obfuscation is also to make it harder to even replicate, because it does some transformations that don’t affect the computer since the computer executes the same instructions that lead to the same result, but it’s certainly harder for a human being to understand the underlying way the program executes).&lt;/h3&gt;

&lt;h3 id=&quot;in-our-era-obfuscation-is-heavily-used-for-antibots-so-users-cant-just-look-at-the-antibots-code-see-what-it-checks-for-directly-and-create-a-solution-that-would-bypass-it&quot;&gt;In our era, obfuscation is heavily used for antibots, so users can’t just look at the antibots code, see what it checks for directly and create a solution that would bypass it.&lt;/h3&gt;</content><author><name>Nero</name></author><category term="antibots" /><category term="programming" /><category term="antibot" /><category term="antibots" /><category term="programming" /><category term="ast" /><category term="manipulation" /><summary type="html">Let’s imagine for a second you want to bot a website. Though, why would you wanna do this? Well, nowadays, there are quite a few products that are produced in low quantity and the demand is pretty high. For example, GPUs or even sneakers.</summary></entry></feed>